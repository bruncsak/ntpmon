#! /usr/bin/env sh
VERSION_DATE=2024-12-31
USER_AGENT="https://github.com/bruncsak/ntpmon $VERSION_DATE"

reachability_line()
{
  i=0
  while [[ $i -lt 112 ]] ;do
    if $NTPQUERY $1 > /dev/null 2>& 1 ;then
      printf @
    else
      printf .
    fi &
    # Why not more frequently than 8 seconds?
    # If you have discard statement and restrict statement with limited option in ntpd.conf,
    # then packet loss would occur due to the time server dropping packet.
    sleep 8
    (( i += 1))
  done
  printf '\n'
}

fetch_score()
{
  curl -s -A "$USER_AGENT" "https://www.ntppool.org/scores/$2/log?limit=$1&monitor=recentmedian" |
  awk -F, '{
    if (NR == 1)
    # CSV field name parsing
    # ts_epoch,ts,offset,step,score,monitor_id,monitor_name,leap,error
    # 2, 5, 7
    # ts, score, monitor_name
      for (i=1; i<=NF ; i++)
        {
        if ($i == "ts")
          ts_index=i;
        else
        if ($i == "score")
          score_index=i;
        else
        if ($i == "monitor_name")
          monitor_name_index=i;
        }
    else
    if ($monitor_name_index == "recentmedian")
      {
      printf("%s %5s", gensub(/^.*-([0-9][0-9]-[0-9][0-9]).*([0-9][0-9]:[0-9][0-9]):.*$/, "\\1 \\2", "g", $ts_index), substr($score_index,1,5));
      exit;
      }
}'
}

monitor_loop()
{
  while : ;do
    # There is a cache exception rule for monitor "recentmedian" and limit 1:
    # https://github.com/bruncsak/ntpmon/issues/1
    printf '%17s ' "$(fetch_score 1 $1)"
    reachability_line $1
  done
}

if [[ $# -eq 0 ]] ;then
  echo "IP address argument expected" >& 2
  exit 1
fi
if command -v ntpdate > /dev/null ;then
  NTPQUERY="ntpdate -d -q"
elif command -v ntpquery > /dev/null ;then
  NTPQUERY=ntpquery
elif command -v $(dirname $0)/ntpquery > /dev/null ;then
  NTPQUERY=$(dirname $0)/ntpquery
else
  echo "Neither ntpdate, nor ntpquery found" >& 2
  exit 1
fi
PIDLIST=""
TS="$(date +%s)"
for IP ;do
  monitor_loop $IP > "${TS}_$IP.log" &
  PIDLIST="$PIDLIST $!"
done
trap "kill $PIDLIST; exit" 1 2 3 13 15
wait
